'''
This code plots the data we have from OOI 
it's not flexible and not pretty code, but trying to make sense of what's there

'''

# imports
from lo_tools import Lfun, zfun
from lo_tools import plotting_functions as pfun

import os 
import sys
import xarray as xr
import netCDF4 as nc
from time import time
import numpy as np
import pandas as pd
import pickle 

import matplotlib.pyplot as plt
from cmcrameri import cm as cmc
import matplotlib.dates as mdates
from datetime import datetime

Ldir = Lfun.Lstart()

moor = 'CE09OSSM'

#input paths + filenames for upward (up at mfd) and downward (down at nsif) facing ADCPs
in_dir = Ldir['parent'] / 'LKH_data' / 'OOI' / 'CE' / 'coastal_moorings' / moor / 'velocity'
fn_up = in_dir / 'mfd' / 'ooi-ce09ossm-mfd35-04-adcpsj000_ff2d_359a_11eb.nc'
fn_down = in_dir / 'nsif' / 'ooi-ce09ossm-rid26-01-adcptc000_dad4_820b_2d26.nc'

if os.path.exists(in_dir)==True:
    fn_list = os.listdir(in_dir)
if os.path.exists(in_dir)==False:
    print('input path does not exist')
    sys.exit()

ds_up = xr.open_dataset(fn_up, decode_times=True)
ds_down = xr.open_dataset(fn_down, decode_times=True)

#format plotting space 
plt.close('all')
fs=11
plt.rc('font', size=fs)
height_of_image = 6.5
width_of_image = 10

# upward ADCP 
fig1 = plt.figure(figsize=(width_of_image,height_of_image))
fig1.set_size_inches(width_of_image,height_of_image, forward=False)

ax0 = plt.subplot2grid((4,1), (0,0), colspan=1)
ax1 = plt.subplot2grid((4,1), (1,0), colspan=1)
ax2 = plt.subplot2grid((4,1), (2,0), colspan=1)
ax3 = plt.subplot2grid((4,1), (3,0), colspan=1)

smap=cmc.batlow
Z = ds_up.z.values
u = ds_up.eastward_sea_water_velocity.values
ot = ds_up.time.values

pcm0 = ax0.scatter(ot, Z, u, cmap = smap) #, shading='gouraud') #,vmin=-120, vmax=320)


# downward ADCP 
fig2 = plt.figure(figsize=(width_of_image,height_of_image))
fig2.set_size_inches(width_of_image,height_of_image, forward=False)




sys.exit() 

numfiles = len(fn_list)

for nf in fn_list:
    fn = nf
    print('working on file: ' + fn)
    fn_in = in_dir / fn
    ds = xr.open_dataset(fn_in)
    sys.exit()

sys.exit()
fn_list = Lfun.get_fn_list(Ldir['list_type'], Ldir, Ldir['ds0'], Ldir['ds1'])
